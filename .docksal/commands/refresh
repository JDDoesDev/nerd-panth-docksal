#!/usr/bin/env bash

## Refresh a folder based on the contents of the container's volumes. Must be run from the project root on the host.
##
## Usage: fin refresh [-f modules|vendor|core|all] [-r] [-s host|container]
## -f | --folder  (required)  The folder to refresh (modules|vendor|core|all)
## -r | --remove  (optional)  Whether or not to remove files on the destination that have been deleted on the source.
##                            Defaults to not removing.
## -s | --source  (optional)  The source to refresh from. Can be either host or container.

# Abort script if anything fails.
set -e

cd ${PROJECT_ROOT}

while [ "$1" != "" ]; do
  case $1 in
    -f | --folder)
      shift
      refresh_selection=$1
    ;;
    -r | --remove)
      should_delete="--delete"
      ;;
    -s | --source)
      shift
      direction="$1"
      ;;
  esac
  shift
done
delete_arg=${should_delete:-''}
direction=${direction:-container}

case $refresh_selection in
  modules | m )
    source_container='/var/www/web/modules/composer'
    source_host="${PROJECT_ROOT}/web/modules/composer"
    dest_container='/var/www/web/modules/'
    dest_host="${PROJECT_ROOT}/web/modules/"
  ;;
  vendor | v )
    source_container='/var/www/vendor'
    source_host="${PROJECT_ROOT}/vendor"
    dest_container='/var/www/'
    dest_host="${PROJECT_ROOT}/"
  ;;
  core | c )
    source_container='/var/www/web/core'
    source_host='./web/core'
    dest_container='/var/www/web/'
    dest_host='./web'
  ;;
  *)
    echo 'Please select a valid folder to refresh'
    exit 1
  ;;
esac

if [ $direction == 'container' ]; then
  rsync -e 'docker exec -i' -avP ${delete_arg} ${COMPOSE_PROJECT_NAME_SAFE}_cli_1:${source_container} ${dest_host}
elif [ $direction == 'host' ]; then
  rsync -e 'docker exec -i' -avP ${delete_arg} ${source_host} ${COMPOSE_PROJECT_NAME_SAFE}_cli_1:${dest_container}
else
  echo "Please select either host or container as the source."
  exit 1
fi

